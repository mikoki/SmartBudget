// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartBudget.Data;

namespace SmartBudget.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220506215143_createDbWithData")]
    partial class createDbWithData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SmartBudget.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ExpenseTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 40m,
                            CreatedAt = new DateTime(2021, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpenseTypeId = 1,
                            Title = "September 2020 - bills",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 50m,
                            CreatedAt = new DateTime(2021, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpenseTypeId = 1,
                            Title = "October 2021 - bills",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 30m,
                            CreatedAt = new DateTime(2021, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpenseTypeId = 2,
                            Title = "October 2021 - bills",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 25m,
                            CreatedAt = new DateTime(2021, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpenseTypeId = 3,
                            Title = "September 2021 - bills",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 28m,
                            CreatedAt = new DateTime(2021, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpenseTypeId = 3,
                            Title = "October 2021 - bills",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SmartBudget.Models.ExpenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ExpenseTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Electricity"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Water"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Cell phone"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Loan",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Type = "Auto insurance",
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Type = "Gasoline",
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            Type = "Rent",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("SmartBudget.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("IncomeTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IncomeTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Incomes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 800m,
                            CreatedAt = new DateTime(2021, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IncomeTypeId = 1,
                            Title = "Job - September 2021",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 820m,
                            CreatedAt = new DateTime(2021, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IncomeTypeId = 1,
                            Title = "Job - October 2021",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 100m,
                            CreatedAt = new DateTime(2021, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IncomeTypeId = 2,
                            Title = "October 2021 - apartment",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 45m,
                            CreatedAt = new DateTime(2021, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IncomeTypeId = 3,
                            Title = "September 2021",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 80m,
                            CreatedAt = new DateTime(2021, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IncomeTypeId = 3,
                            Title = "October 2021",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SmartBudget.Models.IncomeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IncomeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Salary"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Rent"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Investment"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Sale",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Type = "Lottery",
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Type = "Shares",
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            Type = "Dividends",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("SmartBudget.Models.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateOfReminding")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDisplayed")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reminders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 933, DateTimeKind.Local).AddTicks(1408),
                            DateOfReminding = new DateTime(2022, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Water and Electricity",
                            IsDisplayed = false,
                            Title = "Bills - October",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 933, DateTimeKind.Local).AddTicks(6304),
                            DateOfReminding = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "200 in the bank",
                            IsDisplayed = true,
                            Title = "Deposit",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 933, DateTimeKind.Local).AddTicks(6525),
                            DateOfReminding = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDisplayed = false,
                            Title = "Third-party liability insurance",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 933, DateTimeKind.Local).AddTicks(6572),
                            DateOfReminding = new DateTime(2022, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "TV",
                            IsDisplayed = false,
                            Title = "Bills - January",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 933, DateTimeKind.Local).AddTicks(6608),
                            DateOfReminding = new DateTime(2022, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDisplayed = false,
                            Title = "Insurance",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("SmartBudget.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("SmartBudget.Models.Saving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("AmountGoal")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("CurrentAmount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Savings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountGoal = 800m,
                            CreatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 920, DateTimeKind.Local).AddTicks(489),
                            CurrentAmount = 15m,
                            IsCompleted = false,
                            Title = "Car",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AmountGoal = 820m,
                            CreatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 930, DateTimeKind.Local).AddTicks(8468),
                            CurrentAmount = 800m,
                            IsCompleted = false,
                            Title = "Phone",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            AmountGoal = 100m,
                            CreatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 930, DateTimeKind.Local).AddTicks(8720),
                            CurrentAmount = 80m,
                            IsCompleted = false,
                            Title = "Charity",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            AmountGoal = 45m,
                            CreatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 930, DateTimeKind.Local).AddTicks(8741),
                            CurrentAmount = 10m,
                            IsCompleted = false,
                            Title = "Dress",
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            AmountGoal = 80m,
                            CreatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 930, DateTimeKind.Local).AddTicks(8755),
                            CurrentAmount = 20m,
                            IsCompleted = false,
                            Title = "Rent",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("SmartBudget.Models.SavingLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("SavingId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("SavingId");

                    b.ToTable("SavingLogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 40m,
                            SavingId = 1,
                            Type = 0,
                            UpdatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 932, DateTimeKind.Local).AddTicks(2042)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 20m,
                            SavingId = 1,
                            Type = 1,
                            UpdatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 932, DateTimeKind.Local).AddTicks(3778)
                        },
                        new
                        {
                            Id = 3,
                            Amount = 60m,
                            SavingId = 1,
                            Type = 0,
                            UpdatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 932, DateTimeKind.Local).AddTicks(3833)
                        },
                        new
                        {
                            Id = 4,
                            Amount = 15m,
                            SavingId = 2,
                            Type = 0,
                            UpdatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 932, DateTimeKind.Local).AddTicks(3846)
                        },
                        new
                        {
                            Id = 5,
                            Amount = 20m,
                            SavingId = 2,
                            Type = 0,
                            UpdatedAt = new DateTime(2022, 5, 7, 0, 51, 40, 932, DateTimeKind.Local).AddTicks(3856)
                        });
                });

            modelBuilder.Entity("SmartBudget.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<bool>("IsLogged")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool>("isBlocked")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1982, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "g.petrov@abv.bg",
                            FirstName = "Georgi",
                            IsLogged = false,
                            LastName = "Petkov",
                            Password = "th/k3h5jtdWPEF0kFbvQVFe5PaeC3RUXGXeUjBriM+4HIcIN",
                            RoleId = 1,
                            Username = "gpetrovADM",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1994, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "k.jekova@abv.bg",
                            FirstName = "Krasimira",
                            IsLogged = false,
                            LastName = "Jekova",
                            Password = "ncyM9SmsO32kMdh6sAt+IGtw5UBnW3GfVCchwGc7drT/dsCY",
                            RoleId = 1,
                            Username = "kjekovaADM",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1978, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "a.dimitrov@abv.bg",
                            FirstName = "Anton",
                            IsLogged = false,
                            LastName = "Dimitrov",
                            Password = "2IlfBq/nKH95mXK6pliXs0YkVU/Mqfmo2QOFepjLgoZuhFTu",
                            RoleId = 2,
                            Username = "andim558",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1990, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "v.hristova@abv.bg",
                            FirstName = "Valq",
                            IsLogged = false,
                            LastName = "Hristova",
                            Password = "ytCqnO71zyzx22/SYMFDoX/oYSYBY/hG+dde9rdJbwkT7aUe",
                            RoleId = 2,
                            Username = "valhristova",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1973, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "a.vladimirov@abv.bg",
                            FirstName = "Asen",
                            IsLogged = false,
                            LastName = "Vladimirov",
                            Password = "mwpYsRolUMs29HXNBn/IPLZG6KWjfGuNUIfNkcQByDhvMTuH",
                            RoleId = 2,
                            Username = "a.vladimirov11",
                            isBlocked = false
                        });
                });

            modelBuilder.Entity("SmartBudget.Models.Expense", b =>
                {
                    b.HasOne("SmartBudget.Models.ExpenseType", "ExpenseType")
                        .WithMany()
                        .HasForeignKey("ExpenseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBudget.Models.User", "User")
                        .WithMany("Expense")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartBudget.Models.ExpenseType", b =>
                {
                    b.HasOne("SmartBudget.Models.User", "User")
                        .WithMany("ExpenseType")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartBudget.Models.Income", b =>
                {
                    b.HasOne("SmartBudget.Models.IncomeType", "IncomeType")
                        .WithMany()
                        .HasForeignKey("IncomeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBudget.Models.User", "User")
                        .WithMany("Income")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncomeType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartBudget.Models.IncomeType", b =>
                {
                    b.HasOne("SmartBudget.Models.User", "User")
                        .WithMany("IncomeType")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartBudget.Models.Reminder", b =>
                {
                    b.HasOne("SmartBudget.Models.User", "User")
                        .WithMany("Reminder")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartBudget.Models.Saving", b =>
                {
                    b.HasOne("SmartBudget.Models.User", "User")
                        .WithMany("Saving")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartBudget.Models.SavingLog", b =>
                {
                    b.HasOne("SmartBudget.Models.Saving", "Saving")
                        .WithMany("SavingLog")
                        .HasForeignKey("SavingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Saving");
                });

            modelBuilder.Entity("SmartBudget.Models.User", b =>
                {
                    b.HasOne("SmartBudget.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SmartBudget.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SmartBudget.Models.Saving", b =>
                {
                    b.Navigation("SavingLog");
                });

            modelBuilder.Entity("SmartBudget.Models.User", b =>
                {
                    b.Navigation("Expense");

                    b.Navigation("ExpenseType");

                    b.Navigation("Income");

                    b.Navigation("IncomeType");

                    b.Navigation("Reminder");

                    b.Navigation("Saving");
                });
#pragma warning restore 612, 618
        }
    }
}
